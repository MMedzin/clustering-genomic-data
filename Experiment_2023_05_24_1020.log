10:20:49,886 root INFO Starting experiment...
10:20:49,886 root INFO Loading GEMLER data...
10:20:58,338 root INFO GEMLER was loaded.
10:20:58,338 root INFO Running GridSearch for GEMLER...
10:21:32,737 root INFO GEMLER GridSearch done for KMeans.
10:21:40,693 root INFO GEMLER GridSearch done for KMedoids.
10:23:40,420 root INFO GEMLER GridSearch done for AgglomerativeClustering.
10:32:25,559 root INFO GEMLER GridSearch done for Birch.
10:32:30,288 root INFO GEMLER GridSearch done for DBSCAN.
10:35:26,364 root INFO GEMLER GridSearch done for OPTICS.
10:39:23,724 root INFO GEMLER GridSearch done for SOM.
10:41:12,247 root INFO GEMLER GridSearch done for AffinityPropagation.
10:43:04,699 root INFO GEMLER GridSearch done for SpectralClustering.
10:43:04,699 root INFO GEMLER GridSearch results saved to csv.
10:43:04,699 root INFO Loading METABRIC data...
10:43:09,505 root INFO METABRIC was loaded.
10:43:09,505 root INFO Running GridSearch for METABRIC...
10:43:17,184 root CRITICAL A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9), SIGKILL(-9)}
Traceback (most recent call last):
  File "/home/michal/clustering-genomic-data/experiment/run_experiment.py", line 131, in main
    grid_search.fit(
  File "/home/michal/clustering-genomic-data/experiment/clustering_grid_search.py", line 475, in fit
    self._run_search(evaluate_candidates)
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/sklearn/model_selection/_search.py", line 1388, in _run_search
    evaluate_candidates(ParameterGrid(self.param_grid))
  File "/home/michal/clustering-genomic-data/experiment/clustering_grid_search.py", line 422, in evaluate_candidates
    out = parallel(
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/sklearn/utils/parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/parallel.py", line 1098, in __call__
    self.retrieve()
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/concurrent/futures/_base.py", line 446, in result
    return self.__get_result()
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/concurrent/futures/_base.py", line 391, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9), SIGKILL(-9)}
10:43:17,199 root INFO METABRIC GridSearch failed for KMeans. Skipping...
10:43:54,908 root INFO METABRIC GridSearch done for KMedoids.
10:57:34,8 root INFO METABRIC GridSearch done for AgglomerativeClustering.
10:57:45,365 concurrent.futures ERROR exception calling callback for <Future at 0x7f45da978160 state=finished raised TerminatedWorkerError>
Traceback (most recent call last):
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/externals/loky/_base.py", line 26, in _invoke_callbacks
    callback(self)
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/parallel.py", line 385, in __call__
    self.parallel.dispatch_next()
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/parallel.py", line 834, in dispatch_next
    if not self.dispatch_one_batch(self._original_iterator):
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/_parallel_backends.py", line 556, in apply_async
    future = self._workers.submit(SafeFunction(func))
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/externals/loky/reusable_executor.py", line 176, in submit
    return super().submit(fn, *args, **kwargs)
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/externals/loky/process_executor.py", line 1129, in submit
    raise self._flags.broken
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9)}
10:57:52,190 root CRITICAL A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9)}
Traceback (most recent call last):
  File "/home/michal/clustering-genomic-data/experiment/run_experiment.py", line 131, in main
    grid_search.fit(
  File "/home/michal/clustering-genomic-data/experiment/clustering_grid_search.py", line 475, in fit
    self._run_search(evaluate_candidates)
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/sklearn/model_selection/_search.py", line 1388, in _run_search
    evaluate_candidates(ParameterGrid(self.param_grid))
  File "/home/michal/clustering-genomic-data/experiment/clustering_grid_search.py", line 422, in evaluate_candidates
    out = parallel(
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/sklearn/utils/parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/parallel.py", line 1098, in __call__
    self.retrieve()
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/concurrent/futures/_base.py", line 446, in result
    return self.__get_result()
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/concurrent/futures/_base.py", line 391, in __get_result
    raise self._exception
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/externals/loky/_base.py", line 26, in _invoke_callbacks
    callback(self)
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/parallel.py", line 385, in __call__
    self.parallel.dispatch_next()
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/parallel.py", line 834, in dispatch_next
    if not self.dispatch_one_batch(self._original_iterator):
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/parallel.py", line 901, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/parallel.py", line 819, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/_parallel_backends.py", line 556, in apply_async
    future = self._workers.submit(SafeFunction(func))
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/externals/loky/reusable_executor.py", line 176, in submit
    return super().submit(fn, *args, **kwargs)
  File "/home/michal/miniconda3/envs/clustering-genomic/lib/python3.9/site-packages/joblib/externals/loky/process_executor.py", line 1129, in submit
    raise self._flags.broken
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker.

The exit codes of the workers are {SIGKILL(-9)}
10:57:52,194 root INFO METABRIC GridSearch failed for Birch. Skipping...
10:58:15,745 root INFO METABRIC GridSearch done for DBSCAN.
11:14:18,409 root INFO METABRIC GridSearch done for OPTICS.
11:39:17,642 root INFO METABRIC GridSearch done for SOM.
11:42:56,227 root INFO METABRIC GridSearch done for AffinityPropagation.
11:54:08,344 root INFO METABRIC GridSearch done for SpectralClustering.
11:54:08,344 root INFO METABRIC GridSearch results saved to csv.
